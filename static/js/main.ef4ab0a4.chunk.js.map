{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerForDate","this","window","setInterval","setState","console","info","toUTCString","slice","prevName","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerForClockName","handleAddClock","handleRemoveClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,aAAe,EALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAC3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAXP,gCAcE,SAAmBC,GACjB,IAAQC,EAAST,KAAKU,MAAdD,KAEJD,EAASC,OAASA,GACpBL,QAAQO,MAAR,uBAA8BH,EAASC,KAAvC,eAAkDA,MAlBxD,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,gBAvB9B,oBA0BE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAZ,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAMS,cAAcC,OAAO,IAAK,YAvC3C,GAA2BO,aCP3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAQX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,EAMEC,kBAAoBrB,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,MARL,EAkBEQ,eAAiB,WACf,EAAKpB,SAAS,CAAEiB,UAAU,KAnB9B,EAsBEI,kBAAoB,WAClB,EAAKrB,SAAS,CAAEiB,UAAU,KAvB9B,uDAUE,WACEK,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,oBAERH,SAASC,iBAAiB,cAAe1B,KAAKuB,gBAC9CE,SAASC,iBAAiB,QAAS1B,KAAKwB,qBAf5C,oBA0BE,WACE,MAAgCxB,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GACE,cAAC,EAAD,CAAOX,KAAMY,WAjCxB,GAAyBP,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.ef4ab0a4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerForDate = 0;\n\n  componentDidMount() {\n    this.timerForDate = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevName: Props) {\n    const { name } = this.props;\n\n    if (prevName.name !== name) {\n      console.debug(`Renamed from ${prevName.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerForDate);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerForClockName = window.setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n    });\n    document.addEventListener('contextmenu', this.handleAddClock);\n    document.addEventListener('click', this.handleRemoveClock);\n  }\n\n  handleAddClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  handleRemoveClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n        && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}